{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install -q python-terrier==0.11.0","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-28T15:40:07.559514Z","iopub.execute_input":"2025-04-28T15:40:07.559927Z","iopub.status.idle":"2025-04-28T15:40:27.464469Z","shell.execute_reply.started":"2025-04-28T15:40:07.559898Z","shell.execute_reply":"2025-04-28T15:40:27.463547Z"}},"outputs":[{"name":"stdout","text":"\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.5/119.5 kB\u001b[0m \u001b[31m3.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m859.0/859.0 kB\u001b[0m \u001b[31m23.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m60.1/60.1 kB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.6/1.6 MB\u001b[0m \u001b[31m53.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m288.0/288.0 kB\u001b[0m \u001b[31m17.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m69.6/69.6 kB\u001b[0m \u001b[31m2.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.2/119.2 kB\u001b[0m \u001b[31m6.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.1/45.1 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m51.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[?25h  Building wheel for python-terrier (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Building wheel for chest (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Building wheel for warc3-wet-clueweb09 (setup.py) ... \u001b[?25l\u001b[?25hdone\n  Building wheel for cbor (setup.py) ... \u001b[?25l\u001b[?25hdone\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import pandas as pd\nimport pyterrier as pt\n\nif not pt.started():\n  pt.init()","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-28T15:40:27.466522Z","iopub.execute_input":"2025-04-28T15:40:27.466864Z","iopub.status.idle":"2025-04-28T15:40:32.028612Z","shell.execute_reply.started":"2025-04-28T15:40:27.466839Z","shell.execute_reply":"2025-04-28T15:40:32.027258Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_31/3003330768.py:4: DeprecationWarning: Call to deprecated function (or staticmethod) started. (use pt.java.started() instead) -- Deprecated since version 0.11.0.\n  if not pt.started():\n","output_type":"stream"},{"name":"stdout","text":"terrier-assemblies 5.11 jar-with-dependencies not found, downloading to /root/.pyterrier...\nDone\nterrier-python-helper 0.0.8 jar not found, downloading to /root/.pyterrier...\nDone\n","output_type":"stream"},{"name":"stderr","text":"Java started and loaded: pyterrier.java, pyterrier.terrier.java [version=5.11 (build: craig.macdonald 2025-01-13 21:29), helper_version=0.0.8]\n/tmp/ipykernel_31/3003330768.py:5: DeprecationWarning: Call to deprecated method pt.init(). Deprecated since version 0.11.0.\njava is now started automatically with default settings. To force initialisation early, run:\npt.java.init() # optional, forces java initialisation\n  pt.init()\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/recipe-sampled-0-25/sampled_dataset.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-28T15:40:32.029843Z","iopub.execute_input":"2025-04-28T15:40:32.030377Z","iopub.status.idle":"2025-04-28T15:40:46.951539Z","shell.execute_reply.started":"2025-04-28T15:40:32.030347Z","shell.execute_reply":"2025-04-28T15:40:46.950767Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"# Create a list of documents (use 'directions' for indexing)\ndocuments = [{'docno': str(i), 'text': text} for i, text in enumerate(df['directions'])]\n\n# Create the index\nindexer = pt.IterDictIndexer(\"./index\")  # Set the path where the index will be stored\nindexer.index(documents)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-28T15:40:46.953593Z","iopub.execute_input":"2025-04-28T15:40:46.953906Z","iopub.status.idle":"2025-04-28T15:42:13.815127Z","shell.execute_reply.started":"2025-04-28T15:40:46.953883Z","shell.execute_reply":"2025-04-28T15:42:13.814263Z"}},"outputs":[{"name":"stdout","text":"15:40:59.788 [ForkJoinPool-1-worker-3] WARN org.terrier.structures.indexing.Indexer -- Adding an empty document to the index (61876) - further warnings are suppressed\n15:42:13.797 [ForkJoinPool-1-worker-3] WARN org.terrier.structures.indexing.Indexer -- Indexed 4 empty documents\n","output_type":"stream"},{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"<org.terrier.querying.IndexRef at 0x7f6c80c25c70 jclass=org/terrier/querying/IndexRef jself=<LocalRef obj=0x8f8dbf0 at 0x7f6cc5110790>>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"# Create a searcher using the index\nindex = pt.IndexFactory.of(\"./index\")\n\nbm25 = pt.BatchRetrieve(index, wmodel=\"BM25\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-28T15:42:13.816013Z","iopub.execute_input":"2025-04-28T15:42:13.816292Z","iopub.status.idle":"2025-04-28T15:42:13.861093Z","shell.execute_reply.started":"2025-04-28T15:42:13.816266Z","shell.execute_reply":"2025-04-28T15:42:13.860219Z"}},"outputs":[{"name":"stderr","text":"/tmp/ipykernel_31/2611694940.py:4: DeprecationWarning: Call to deprecated class BatchRetrieve. (use pt.terrier.Retriever() instead) -- Deprecated since version 0.11.0.\n  bm25 = pt.BatchRetrieve(index, wmodel=\"BM25\")\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"print(index.getCollectionStatistics().toString())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-28T15:42:14.849403Z","iopub.execute_input":"2025-04-28T15:42:14.849744Z","iopub.status.idle":"2025-04-28T15:42:14.871723Z","shell.execute_reply.started":"2025-04-28T15:42:14.849715Z","shell.execute_reply":"2025-04-28T15:42:14.870939Z"}},"outputs":[{"name":"stdout","text":"Number of documents: 557658\nNumber of terms: 50996\nNumber of postings: 22626961\nNumber of fields: 1\nNumber of tokens: 30780702\nField names: [text]\nPositions:   false\n\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"# Single-query convenience\nresults = bm25.search(\"Bake the cake\")\nprint(results)\n\n# Batch queries via a DataFrame\nqueries = pd.DataFrame([{\"qid\": 1, \"query\": \"Bake the cake\"},\n                        {\"qid\": 2, \"query\": \"mix ingredients\"}])\n\nbatch_results = bm25.transform(queries)\nprint(batch_results)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-28T16:21:43.150502Z","iopub.execute_input":"2025-04-28T16:21:43.151353Z","iopub.status.idle":"2025-04-28T16:21:43.360823Z","shell.execute_reply.started":"2025-04-28T16:21:43.151324Z","shell.execute_reply":"2025-04-28T16:21:43.359920Z"}},"outputs":[{"name":"stdout","text":"    qid   docid   docno  rank     score          query\n0     1  279827  279827     0  8.667705  Bake the cake\n1     1  331286  331286     1  8.652477  Bake the cake\n2     1  174714  174714     2  8.610822  Bake the cake\n3     1  378811  378811     3  8.572486  Bake the cake\n4     1  289883  289883     4  8.555901  Bake the cake\n..   ..     ...     ...   ...       ...            ...\n995   1   62494   62494   995  7.656828  Bake the cake\n996   1  134319  134319   996  7.656828  Bake the cake\n997   1  159265  159265   997  7.656828  Bake the cake\n998   1  178616  178616   998  7.656828  Bake the cake\n999   1  291149  291149   999  7.656828  Bake the cake\n\n[1000 rows x 6 columns]\n     qid   docid   docno  rank     score            query\n0      1  279827  279827     0  8.667705    Bake the cake\n1      1  331286  331286     1  8.652477    Bake the cake\n2      1  174714  174714     2  8.610822    Bake the cake\n3      1  378811  378811     3  8.572486    Bake the cake\n4      1  289883  289883     4  8.555901    Bake the cake\n...   ..     ...     ...   ...       ...              ...\n1995   2  124406  124406   995  2.732035  mix ingredients\n1996   2  129205  129205   996  2.732035  mix ingredients\n1997   2  150085  150085   997  2.732035  mix ingredients\n1998   2  155964  155964   998  2.732035  mix ingredients\n1999   2  157838  157838   999  2.732035  mix ingredients\n\n[2000 rows x 6 columns]\n","output_type":"stream"}],"execution_count":17},{"cell_type":"code","source":"# Function to perform a simple keyword search\ndef search_recipes(df, keyword):\n    keyword = keyword.lower()\n    \n    # Filter recipes where the keyword appears in either title, ingredients or NER column\n    result = df[df['title'].str.contains(keyword, case=False) | \n                df['ingredients'].str.contains(keyword, case=False) | \n                df['NER'].str.contains(keyword, case=False)]\n    \n    return result\n\n# Example \nkeyword = 'chocolate cookies'\nresults = search_recipes(df, keyword)\nprint(results)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-28T16:10:16.878087Z","iopub.execute_input":"2025-04-28T16:10:16.878381Z","iopub.status.idle":"2025-04-28T16:10:20.067736Z","shell.execute_reply.started":"2025-04-28T16:10:16.878363Z","shell.execute_reply":"2025-04-28T16:10:20.066867Z"}},"outputs":[{"name":"stdout","text":"        Unnamed: 0                                              title  \\\n30          716739                       Chocolate Cookies(No Bake)     \n1434        460178                          No Bake Chocolate Cookies   \n1694       1264515                                Black Forest Trifle   \n4362       1909143         Snowball-style Decorated Chocolate Cookies   \n4821       1569341                          Mexican Chocolate Cookies   \n...            ...                                                ...   \n543422     1826885              Easy No Bake Chocolate Cookies Recipe   \n544731     1830950  Boop's Peanut Butter Cup Chocolate Cookies Recipe   \n548039      850642                            White Chocolate Cookies   \n555286     2167436                        Chocolate-Chocolate Cookies   \n555372     1384644                                         Chocotorta   \n\n                                              ingredients  \\\n30      [\"2 c. sugar\", \"1/2 c. butter or margarine\", \"...   \n1434    [\"6 T cocoa\", \"2 c sugar\", \"1 stick margarine\"...   \n1694    [\"1 1/4 cups half and half\", \"1 cup whole milk...   \n4362    [\"80 grams Plain flour\", \"1 tbsp Cocoa powder\"...   \n4821    [\"1/4 cups Butter\", \"1/2 cups Sugar\", \"1/2 cup...   \n...                                                   ...   \n543422  [\"2 c. sugar\", \"1/2 c. lowfat milk\", \"1/2 c. b...   \n544731  [\"1/2 c. shortening\", \"1/2 c. butter\", \"2 1/4 ...   \n548039  [\"1 1/4 lb. white chocolate\", \"1 c. Rice Krisp...   \n555286  [\"225 g butter, at room temperature [16 tables...   \n555372  [\"15 ounces dulce de leche\", \"2 8 oz boxes of ...   \n\n                                               directions  \\\n30      ['Mix and cook together for one minute the sug...   \n1434    ['Mix together cocoa and sugar; add margarine ...   \n1694    ['In a saucepan combine cream and milk. Bring ...   \n4362    ['Place a plastic bag on a scale and weigh the...   \n4821    ['Preheat oven to 350°F.', \"In large bowl or s...   \n...                                                   ...   \n543422  ['Mix together the sugar, milk, butter and coc...   \n544731  ['In large mixing bowl, beat the shortening an...   \n548039  ['Melt chocolate in oven.', 'Combine rest of i...   \n555286  ['Combine the butter, sugar, and glucose in th...   \n555372  [\"In a bowl, mix the dulce de leche and soft c...   \n\n                                                     link     source  \\\n30        www.cookbooks.com/Recipe-Details.aspx?id=487207   Gathered   \n1434      www.cookbooks.com/Recipe-Details.aspx?id=149454   Gathered   \n1694              recipes-plus.com/api/v2.0/recipes/23147   Gathered   \n4362    cookpad.com/us/recipes/144955-snowball-style-d...  Recipes1M   \n4821    tastykitchen.com/recipes/desserts/mexican-choc...   Gathered   \n...                                                   ...        ...   \n543422  cookeatshare.com/recipes/easy-no-bake-chocolat...  Recipes1M   \n544731  cookeatshare.com/recipes/boop-s-peanut-butter-...  Recipes1M   \n548039    www.cookbooks.com/Recipe-Details.aspx?id=945344   Gathered   \n555286  www.epicurious.com/recipes/food/views/chocolat...  Recipes1M   \n555372                food52.com/recipes/76899-chocotorta   Gathered   \n\n                                                      NER  dir_word_count  \\\n30      [\"sugar\", \"butter\", \"milk\", \"cocoa\", \"oatmeal\"...              36   \n1434    [\"T\", \"sugar\", \"margarine\", \"milk\", \"peanut bu...              30   \n1694    [\"milk\", \"egg yolks\", \"sugar\", \"chocolate cook...             180   \n4362    [\"flour\", \"Cocoa\", \"Sugar\", \"Vegetable oil\", \"...             258   \n4821    [\"Butter\", \"Sugar\", \"Brown Sugar\", \"Egg\", \"Van...              85   \n...                                                   ...             ...   \n543422  [\"sugar\", \"milk\", \"butter\", \"cocoa\", \"peanut b...              38   \n544731  [\"shortening\", \"butter\", \"all-purpose\", \"sugar...             126   \n548039  [\"white chocolate\", \"Rice Krispies\", \"nuts\", \"...              12   \n555286  [\"butter\", \"sugar\", \"glucose\", \"egg\", \"vanilla...             303   \n555372  [\"leche\", \"cream cheese\", \"coffee\", \"chocolate...             164   \n\n        ner_len  \n30            7  \n1434          7  \n1694          9  \n4362          6  \n4821         13  \n...         ...  \n543422        8  \n544731        9  \n548039        5  \n555286       12  \n555372        4  \n\n[471 rows x 9 columns]\n","output_type":"stream"}],"execution_count":16}]}